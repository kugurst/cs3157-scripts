Checking git commits:
	1) Title:
		   "staged Makefile and revecho.c
	   Body:
		   
	2) Title:
		   "added to readme
	   Body:
		   
	3) Title:
		   "fixed remove all nodes method, implemented part2, referred makefile to part1 libs
	   Body:
		   
	4) Title:
		   "created static lib from mylist.o
	   Body:
		   
	5) Title:
		   "added valgrid output to readme
	   Body:
		   
	6) Title:
		   "completed the rest of function, output is as expected
	   Body:
		   
	7) Title:
		   "added Makefile, mylist.c, and 2 properly working functions: addFront() and traverseList()
	   Body:
		   
	8) Title:
		   "Added solutions
	   Body:
		   
	9) Title:
		   "Lab skeleton code
	   Body:
		   
===Preliminary make clean====
Checking make clean:
	rm -f *.o  core libmylist.a  mylist-test *~

=============================

mylist-test verification:
Make results:
	gcc -g -Wall    -c -o mylist-test.o mylist-test.c
	gcc -g -Wall    -c -o mylist.o mylist.c
	ar rc libmylist.a mylist.o
	ranlib libmylist.a
	gcc -g  mylist-test.o libmylist.a   -o mylist-test

Command results:
	Testing: mylist-test
		==7485== Memcheck, a memory error detector
		==7485== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7485== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7485== Command: ./mylist-test
		==7485== 
		testing addFront(): 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1.0 
		testing flipSignDouble(): -9.0 -8.0 -7.0 -6.0 -5.0 -4.0 -3.0 -2.0 -1.0 
		testing flipSignDouble() again: 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1.0 
		testing findNode(): OK
		popped 9.0, the rest is: [ 8.0 7.0 6.0 5.0 4.0 3.0 2.0 1.0 ]
		popped 8.0, the rest is: [ 7.0 6.0 5.0 4.0 3.0 2.0 1.0 ]
		popped 7.0, the rest is: [ 6.0 5.0 4.0 3.0 2.0 1.0 ]
		popped 6.0, the rest is: [ 5.0 4.0 3.0 2.0 1.0 ]
		popped 5.0, the rest is: [ 4.0 3.0 2.0 1.0 ]
		popped 4.0, the rest is: [ 3.0 2.0 1.0 ]
		popped 3.0, the rest is: [ 2.0 1.0 ]
		popped 2.0, the rest is: [ 1.0 ]
		popped 1.0, the rest is: [ ]
		testing addAfter(): 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 
		popped 1.0, and reversed the rest: [ 9.0 8.0 7.0 6.0 5.0 4.0 3.0 2.0 ]
		popped 9.0, and reversed the rest: [ 2.0 3.0 4.0 5.0 6.0 7.0 8.0 ]
		popped 2.0, and reversed the rest: [ 8.0 7.0 6.0 5.0 4.0 3.0 ]
		popped 8.0, and reversed the rest: [ 3.0 4.0 5.0 6.0 7.0 ]
		popped 3.0, and reversed the rest: [ 7.0 6.0 5.0 4.0 ]
		popped 7.0, and reversed the rest: [ 4.0 5.0 6.0 ]
		popped 4.0, and reversed the rest: [ 6.0 5.0 ]
		popped 6.0, and reversed the rest: [ 5.0 ]
		popped 5.0, and reversed the rest: [ ]
		==7485== 
		==7485== HEAP SUMMARY:
		==7485==     in use at exit: 0 bytes in 0 blocks
		==7485==   total heap usage: 18 allocs, 18 frees, 288 bytes allocated
		==7485== 
		==7485== All heap blocks were freed -- no leaks are possible
		==7485== 
		==7485== For counts of detected and suppressed errors, rerun with: -v
		==7485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

====Testing additional driver====
Make results:
	gcc -g -Wall    -c -o test.o test.c
	gcc -g -L../  test.o  -lmylist -o test

Command results:
	Testing: test
		==7541== Memcheck, a memory error detector
		==7541== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7541== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7541== Command: ./test
		==7541== 
		123OK
		KO321
		10.4 9.4 8.4 7.4 6.4 5.4 4.4 3.4 2.4 1.4 
		-10.4 -9.4 -8.4 -7.4 -6.4 -5.4 -4.4 -3.4 -2.4 -1.4 
		10.4 9.4 8.4 7.4 6.4 5.4 4.4 3.4 2.4 1.4 
		1.85 2.85 3.85 4.85 5.85 6.85 7.85 8.85 9.85 10.85 
		10.85 9.85 8.85 7.85 6.85 5.85 4.85 3.85 2.85 1.85 
		==7541== 
		==7541== HEAP SUMMARY:
		==7541==     in use at exit: 0 bytes in 0 blocks
		==7541==   total heap usage: 36 allocs, 36 frees, 560 bytes allocated
		==7541== 
		==7541== All heap blocks were freed -- no leaks are possible
		==7541== 
		==7541== For counts of detected and suppressed errors, rerun with: -v
		==7541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

Checking make clean:
	rm -f *.o *~ a.out core test

=================================
Checking make clean:
	rm -f *.o  core libmylist.a  mylist-test *~

===Preliminary make clean====
Checking make clean:
	rm -f *.o  core revecho *~

=============================

revecho verification:
===Building dependencies for part2===
Make results:
	gcc -g -Wall    -c -o mylist-test.o mylist-test.c
	gcc -g -Wall    -c -o mylist.o mylist.c
	ar rc libmylist.a mylist.o
	ranlib libmylist.a
	gcc -g  mylist-test.o libmylist.a   -o mylist-test

===Dependencies built===
Make results:
	gcc -g -Wall -I ../part1   -g -L../part1  revecho.c  -lmylist -o revecho

Command results:
	Testing: revecho dude world hello
		==7644== Memcheck, a memory error detector
		==7644== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7644== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7644== Command: ./revecho dude world hello
		==7644== 
		hello
		world
		dude
		
		 dude found 
		==7644== 
		==7644== HEAP SUMMARY:
		==7644==     in use at exit: 0 bytes in 0 blocks
		==7644==   total heap usage: 3 allocs, 3 frees, 48 bytes allocated
		==7644== 
		==7644== All heap blocks were freed -- no leaks are possible
		==7644== 
		==7644== For counts of detected and suppressed errors, rerun with: -v
		==7644== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

Command results:
	Testing: revecho friend world hello
		==7649== Memcheck, a memory error detector
		==7649== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7649== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7649== Command: ./revecho friend world hello
		==7649== 
		hello
		world
		friend
		
		 dude not found 
		==7649== 
		==7649== HEAP SUMMARY:
		==7649==     in use at exit: 0 bytes in 0 blocks
		==7649==   total heap usage: 3 allocs, 3 frees, 48 bytes allocated
		==7649== 
		==7649== All heap blocks were freed -- no leaks are possible
		==7649== 
		==7649== For counts of detected and suppressed errors, rerun with: -v
		==7649== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

Command results:
	Testing: revecho DUDE, where's my car
		==7655== Memcheck, a memory error detector
		==7655== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7655== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7655== Command: ./revecho DUDE, where's my car
		==7655== 
		car
		my
		where's
		DUDE,
		
		 dude not found 
		==7655== 
		==7655== HEAP SUMMARY:
		==7655==     in use at exit: 0 bytes in 0 blocks
		==7655==   total heap usage: 4 allocs, 4 frees, 64 bytes allocated
		==7655== 
		==7655== All heap blocks were freed -- no leaks are possible
		==7655== 
		==7655== For counts of detected and suppressed errors, rerun with: -v
		==7655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

Command results:
	Testing: revecho dude, I dunno
		==7679== Memcheck, a memory error detector
		==7679== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
		==7679== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
		==7679== Command: ./revecho dude, I dunno
		==7679== 
		dunno
		I
		dude,
		
		 dude not found 
		==7679== 
		==7679== HEAP SUMMARY:
		==7679==     in use at exit: 0 bytes in 0 blocks
		==7679==   total heap usage: 3 allocs, 3 frees, 48 bytes allocated
		==7679== 
		==7679== All heap blocks were freed -- no leaks are possible
		==7679== 
		==7679== For counts of detected and suppressed errors, rerun with: -v
		==7679== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
	Return code: 0

Checking make clean:
	rm -f *.o  core revecho *~

===Cleaning dependencies for part2===
Checking make clean:
	rm -f *.o  core libmylist.a  mylist-test *~

===Dependencies cleaned===
